plugins {
	id 'maven-publish'
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id "io.github.juuxel.loom-quiltflower" version "1.+"
}

java_version = project.java_version
archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group

repositories {
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.terraformersmc.com/releases/' }
	maven { url 'https://api.modrinth.com/maven' }
	maven { url 'https://maven.quiltmc.org/repository/release/' }
}

dependencies {
	// Fabric
	minecraft "com.mojang:minecraft:$minecraft_version"
	mappings loom.layered {
		mappings("org.quiltmc:quilt-mappings:$minecraft_version+build.$mappings:intermediary-v2")
		officialMojangMappings()
	}
	modImplementation "net.fabricmc:fabric-loader:$loader_version"

	// Libraries
	include(implementation("com.github.Moonlight-MC.LuaJ:luaj-core:$luaj-figura"))
	include(implementation("com.github.Moonlight-MC.LuaJ:luaj-jse:$luaj-figura"))
	include(implementation("org.java-websocket:Java-WebSocket:$websocket"))

	// Mods
	modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_api"
	modImplementation "com.terraformersmc:modmenu:$modmenu"
	modCompileOnly "maven.modrinth:iris:$iris"
}

loom {
	accessWidenerPath = file "src/main/resources/figura.accesswidener"
}


processResources {
	Map<String, Object> properties = new HashMap<>()

	properties.put("version", version + "-" + 'git rev-parse --short HEAD'.execute().getText().trim())
	properties.put("java_version", java_version)
	properties.put("minecraft_version", minecraft_version)
	properties.put("loader_version", loader_version)
	properties.put("fabric_api", fabric_api)

	properties.forEach((k, v) -> inputs.property(k, v.toString()))
	filesMatching("fabric.mod.json") {
		expand properties
	}
}

tasks.withType(JavaCompile) {
	configure {
		options.encoding = "UTF-8"
		options.release = Integer.valueOf(java_version)
		options.compilerArgs << "-parameters"
	}
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { String.valueOf("$archives_base_name").toUpperCase() + "_${it}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {}
}