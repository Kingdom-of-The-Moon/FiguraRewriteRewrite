{
  "figura": "Figura",
  "figura.tab": "  ",
  "figura.ellipsis": "...",


  "figura.backend.connected": "Подключен к серверу!",
  "figura.backend.disconnected": "Отключен от сервера!",
  "figura.backend.banned": "ты отправлен в ульяновск :-)",

  "figura.backend.error": "Ошибка",
  "figura.backend.invalid_uuid": "Неверный UUID",
  "figura.backend.invalid_data": "Неверные данные",

  "figura.backend.rate_limited": "Слишком много пакетов!",
  "figura.backend.download": "Скачать",
  "figura.backend.ping_rate": "Скорость пингов",
  "figura.backend.ping_size": "Размер пингов",
  "figura.backend.upload": "Загрузить",

  "figura.backend.upload_success": "Аватар загружен!",
  "figura.backend.upload_error": "Ошибка при загрузке",
  "figura.backend.upload_invalid": "Данные повреждены",
  "figura.backend.upload_too_big": "Аватар слишком большой",
  "figura.backend.upload_too_many": "У вас слишком много аватаров",

  "figura.backend.delete_success": "Аватар удалён!",
  "figura.backend.delete_error": "Ошибка при удалении",
  "figura.backend.delete_invalid": "Данные повреждены",
  "figura.backend.delete_not_found": "Аватар не найден",


  "figura.toast.reload": "Аватар перезагружен!",
  "figura.toast.panic_enabled": "Режим паники включен!",
  "figura.toast.panic_disabled": "Режим паники выключен!",
  "figura.toast.clipboard": "Скопировано в буфер обмена!",
  "figura.toast.load_error": "Невозможно загрузить аватар!",


  "figura.trust.group.blocked": "Заблокирован",
  "figura.trust.group.untrusted": "Пониженное доверие",
  "figura.trust.group.trusted": "Повышенное доверие",
  "figura.trust.group.friend": "Друг",
  "figura.trust.group.local": "Локально",

  "figura.trust.infinity": "БЕСКОНЕЧНО",
  "figura.trust.enabled": "Включено",
  "figura.trust.disabled": "Выключено",

  "figura.trust.init_inst": "Функц. при старте",
  "figura.trust.tick_inst": "Функц. при тике",
  "figura.trust.world_tick_inst": "Функц. при м. тике",
  "figura.trust.render_inst": "Функц. при рендрене",
  "figura.trust.world_render_inst": "Функц. при м. рендере",
  "figura.trust.max_mem": "Макс. память скрипта (MB)",
  "figura.trust.complexity": "Макс. комплексность",
  "figura.trust.particles": "Макс. кол-во частиц",
  "figura.trust.sounds": "Макс. кол-во звуков",
  "figura.trust.bb_animations": "Компл. анимаций",
  "figura.trust.vanilla_model_edit": "Изменение ст. модели",
  "figura.trust.nameplate_edit": "Изменение никнейма",
  "figura.trust.offscreen_rendering": "Рендер вне экрана",
  "figura.trust.custom_render_layer": "Польз. слои отрисовки",
  "figura.trust.custom_sounds": "Польз. звуки",


  "figura.gui.on": "ВКЛ",
  "figura.gui.off": "ВЫКЛ",
  "figura.gui.search": "Поиск...",
  "figura.gui.name": "Имя",
  "figura.gui.authors": "Авторы",
  "figura.gui.size": "Размер",
  "figura.gui.complexity": "Комплексность",
  "figura.gui.memory": "Память",
  "figura.gui.back": "Назад",
  "figura.gui.cancel": "Отмена",
  "figura.gui.expand": "Развернуть",
  "figura.gui.minimise": "Свернуть",
  "figura.gui.reset_all": "Сбросить всё",
  "figura.gui.panic.1": "Режим паники включён! Возможности Figura выключены!",
  "figura.gui.panic.2": "вы можете переключить режим паники с помощью клавиши [%s]",
  "figura.gui.help.tooltip": "Помощь",

  "figura.gui.error.no_avatar": "Аватар не выбран!",
  "figura.gui.error.no_keybinds": "У аватара нет горячих клавиш!",
  "figura.gui.error.no_wheel_page": "Не выбрана активная страница!",


  "figura.gui.context.set_trust": "Установить доверие",
  "figura.gui.context.reload": "Перезагрузить аватар",
  "figura.gui.context.copy_name": "Скопировать имя",
  "figura.gui.context.copy_uuid": "Скопировать UUID",
  "figura.gui.context.copy_path": "Скопировать путь",
  "figura.gui.context.open_folder": "Открыть папку",


  "figura.gui.panels.title.profile": "Профиль",
  "figura.gui.panels.title.browser": "Браузер",
  "figura.gui.panels.title.wardrobe": "Гардероб",
  "figura.gui.panels.title.trust": "Доверие",
  "figura.gui.panels.title.settings": "Настройки",

  "figura.gui.panels.title.sound": "Звуки аватара",
  "figura.gui.panels.title.keybind": "Горячие клавиши аватара",
  "figura.gui.panels.title.avatar": "Предпросмотр аватара",


  "figura.gui.wardrobe.expand_wardrobe.tooltip": "Развернуть список гардероба",
  "figura.gui.wardrobe.minimize_wardrobe.tooltip": "Свернуть список гардероба",
  "figura.gui.wardrobe.upload.tooltip": "Загрузить аватар на сервера Figura",
  "figura.gui.wardrobe.reload.tooltip": "Перезагрузить аватар",
  "figura.gui.wardrobe.delete.tooltip": "Удалить аватар с серверов Figura",
  "figura.gui.wardrobe.sound.tooltip": "Звуки аватара",
  "figura.gui.wardrobe.keybind.tooltip": "Горячии клавиши аватара",
  "figura.gui.wardrobe.folder.tooltip": "Открыть корневую папку аватара",
  "figura.gui.wardrobe.unselect": "Не выбран",


  "figura.gui.trust.reset": "Сбросить",
  "figura.gui.trust.expand_trust.tooltip": "Развернуть меню дополнительных настроек доверия",
  "figura.gui.trust.minimize_trust.tooltip": "Свернуть меню дополнительных настроек доверия",
  "figura.gui.trust.avatar_size": "Размер: %s",
  "figura.gui.trust.avatar_memory": "Память: %s",


  "figura.gui.status.size": "Размер",
  "figura.gui.status.size.0": "нет",
  "figura.gui.status.size.1": "100kb+",
  "figura.gui.status.size.2": "75kb+",
  "figura.gui.status.size.3": "нормальный",

  "figura.gui.status.texture": "Текстура",
  "figura.gui.status.texture.0": "нет",
  "figura.gui.status.texture.3": "присутствует",

  "figura.gui.status.script": "Скрипт",
  "figura.gui.status.script.0": "нет",
  "figura.gui.status.script.1": "ошибка",
  "figura.gui.status.script.3": "работает",

  "figura.gui.status.backend": "Сервер",
  "figura.gui.status.backend.reason": "Причина",
  "figura.gui.status.backend.1": "отключен",
  "figura.gui.status.backend.2": "подключение",
  "figura.gui.status.backend.3": "подключен",


  "figura.config.input.any": "Текст...",
  "figura.config.input.int": "Целочисненное...",
  "figura.config.input.float": "Дробное...",
  "figura.config.input.hex_color": "Цвет...",
  "figura.config.input.folder_path": "Путь...",


  "figura.config.nameplate": "Никнейм",
  "figura.config.nameplate.tooltip": "Настройки никнеймма",

  "figura.config.self_nameplate": "Включить свой никнейм",
  "figura.config.self_nameplate.tooltip": "Переключает отрисовку вашего никнейма",

  "figura.config.preview_nameplate": "Отрисовка никнейма в интерфейсе",
  "figura.config.preview_nameplate.tooltip": "Переключает отрисовку никнейма в интерфейсе",

  "figura.config.chat_nameplate": "Кастомизация чата",
  "figura.config.chat_nameplate.tooltip": "Устанавливает уровень кастомизации никнейма в ЧАТЕ",
  "figura.config.entity_nameplate": "Кастомизация сущности",
  "figura.config.entity_nameplate.tooltip": "Устанавливает уровень кастомизации никнейма над СУЩНОСТЬЮ",
  "figura.config.list_nameplate": "Кастомизация списка игроков",
  "figura.config.list_nameplate.tooltip": "Устанавливает уровень кастомизации никнейма в СПИСКЕ ИГРОКОВ",
  "figura.config.nameplate_level.1": "Нет",
  "figura.config.nameplate_level.2": "Скрипт",
  "figura.config.nameplate_level.3": "Скрипт + Иконки",

  "figura.config.script": "Скрипт",
  "figura.config.script.tooltip": "Настройки скриптов",

  "figura.config.log_location": "Точка вывода",
  "figura.config.log_location.tooltip": "Куда выводится информация, переданная в функцию \"print()\" в скрипте.",
  "figura.config.log_location.1": "Чат",
  "figura.config.log_location.2": "Логгер",

  "figura.config.server_script": "Серверные скрипты",
  "figura.config.server_script.tooltip": "Переключает возможность загрузки и запуска скрипта из ресурс пака (серверного). \nДействует только на хоста",

  "figura.config.allow_fp_hands": "Руки от первого лица",
  "figura.config.allow_fp_hands.tooltip": "Может ли скрипт изменять положение, поворот, и размер рук от первого лица.",
  
  "figura.config.actionwheel": "Колесо действий",
  "figura.config.actionwheel.tooltip": "Настройки колеса действий",

  "figura.config.action_wheel_button": "Кнопка колеса действий",
  "figura.config.action_wheel_button.tooltip": "Кнопка, используемая для открытия колеса действий",

  "figura.config.action_wheel_scale": "Размер колеса действий",
  "figura.config.action_wheel_scale.tooltip": "Изменяет размер колеса действий",

  "figura.config.action_wheel_title": "Текст выбранного действия",
  "figura.config.action_wheel_title.tooltip": "Меняет расположение текста привязанного к действию",
  "figura.config.action_wheel_title.1": "Мышь (Подсказка)",
  "figura.config.action_wheel_title.2": "Мышь",
  "figura.config.action_wheel_title.3": "Сверху",
  "figura.config.action_wheel_title.4": "По середине",
  "figura.config.action_wheel_title.5": "Снизу",

  "figura.config.action_wheel_decorations": "Дополнения к хотбару",
  "figura.config.action_wheel_decorations.tooltip": "Переключает отображение дополнений к хотбару, таких как кол-во предметов или индикатор атаки",

  "figura.config.paperdoll": "Кукла",
  "figura.config.paperdoll.tooltip": "Настройки куклы",

  "figura.config.has_paperdoll": "Включить куклу",
  "figura.config.has_paperdoll.tooltip": "Переключает отрисовку куклы",

  "figura.config.paperdoll_always_on": "Отображать всегда",
  "figura.config.paperdoll_always_on.tooltip": "Переключает, должна ли кукла отображаться всегда, или только во время поз",

  "figura.config.first_person_paperdoll": "Только при первом лице",
  "figura.config.first_person_paperdoll.tooltip": "Переключает, должна ли кукла отображаться только когда включен вид от первого лица",

  "figura.config.paperdoll_scale": "Размер куклы",
  "figura.config.paperdoll_scale.tooltip": "Меняет размер куклы",

  "figura.config.misc": "Разное",
  "figura.config.misc.tooltip": "Настройки без категории",

  "figura.config.button_location": "Положение кнопки меню",
  "figura.config.button_location.tooltip": "Положении кнопки Figura",
  "figura.config.button_location.1": "Иконка",
  "figura.config.button_location.2": "Слева-сверху",
  "figura.config.button_location.3": "Справа-сверху",
  "figura.config.button_location.4": "Снизу-слева",
  "figura.config.button_location.5": "Снизу-справа",

  "figura.config.easter_eggs": "Включить пасхалки",
  "figura.config.easter_eggs.tooltip": "Переключает весёлые и неожиданные аспекты Фигуры (скучно!)",

  "figura.config.dev": "Для разработчиков",
  "figura.config.dev.tooltip": "Эксперементальные и/или настройки для разработчиков",

  "figura.config.reload_button": "Перезагрузить аватар",
  "figura.config.reload_button.tooltip": "Перезагружает выбранный аватар при нажатии",

  "figura.config.panic_button": "Кнопка паники",
  "figura.config.panic_button.tooltip": "Выключает отрисовку всех аватаров",

  "figura.config.render_debug_parts_pivot": "Отрисовка опорных точек",
  "figura.config.render_debug_parts_pivot.tooltip": "Отрисовывать опорные точки %d и %d когда отрисовка хитбоксов включена",
  "figura.config.render_debug_parts_pivot.tooltip.cubes": "кубов",
  "figura.config.render_debug_parts_pivot.tooltip.groups": "групп",
  "figura.config.render_debug_parts_pivot.1": "Выкл",
  "figura.config.render_debug_parts_pivot.2": "Только видимые",
  "figura.config.render_debug_parts_pivot.3": "Каждую точку",

  "figura.config.log_others": "Логировать не хостовые скрипты",
  "figura.config.log_others.tooltip": "Разрешает логирование вывода и ошибок из не хостовых скриптов",

  "figura.config.main_dir": "Расположение папки Figura",
  "figura.config.main_dir.tooltip": "Меняет расположение папки Figura",

  "figura.config.auth_server_ip": "IP сервера аутентификации",
  "figura.config.auth_server_ip.tooltip": "Устанавливает IP сервера аутентификации",

  "figura.config.backend_ip": "IP сервера Figura",
  "figura.config.backend_ip.tooltip": "Устанавливает IP сервера Figura",

  "figura.command.click_to_open": "Нажмите здесь что-бы открыть",
  "figura.command.run.not_local_error": "Локальный аватар не выбран!",
  "figura.command.run.no_script_error": "Нету активного скрипта для вызова в нём кода!",
  "figura.command.load.loading": "Загрузка аватара!",
  "figura.command.load.invalid": "Неправильный путь \"%s\"",
  "figura.command.docs_export.success": "Документация Figura экспортирована в директорию Figura",
  "figura.command.docs_export.error": "Произошла ошибка при экспорте документации!",

  "figura.docs": "Команда \"/figura docs\" позволяет получить доступ ко всем типам и функциям которые Figura добавляет в стандартный Lua.",

  "figura.docs.text.type": "Тип",
  "figura.docs.text.description": "Описание",
  "figura.docs.text.function": "Функция",
  "figura.docs.text.syntax": "Синтаксис",
  "figura.docs.text.returns": "Возвращает",
  "figura.docs.text.field": "Поле",
  "figura.docs.text.editable": "Редактируемое",
  "figura.docs.text.not_editable": "Не Редактируемое",
  "figura.docs.text.group": "Группа типов",
  "figura.docs.text.entries": "Входы",
  "figura.docs.text.extends": "наследует",

  "figura.docs.group.misc": "Включает в себя различные типы, которые нельзя отнести в какую-либо отдельную категорию",
  "figura.docs.group.client": "Включает в себя типы относящиеся к текущему клиент. Пока-что только ClientAPI.",
  "figura.docs.group.entity": "Включает в себя типы для сущностей.",
  "figura.docs.group.event": "Включает в себя типы для событий.",
  "figura.docs.group.host": "Включает в себя типы относящиеся к скрипту запущенному у хоста. Пока-что только HostAPI.",
  "figura.docs.group.keybind": "Включает в себя типы относящиеся к горячим клавишам.",
  "figura.docs.group.math": "Включает в себя типы относящиеся к математике, такие как векторы и матрицы.",
  "figura.docs.group.meta": "Включает в себя типы для взаимодействия с метаданными аватара на данном клиенте. Пока-что только MetaAPI.",
  "figura.docs.group.model": "Включает в себя типы для взаимодействия с моделью, и стандартной, и пользовательской.",
  "figura.docs.group.nameplate": "Включает в себя типы для редактирования никнейма.",
  "figura.docs.group.particle": "Включает в себя типы относящиеся к частицам.",
  "figura.docs.group.sound": "Включает в себя типы для проигрывания звуков.",
  "figura.docs.group.world": "Включает в себя типы для различных вещей в мире Minecraft.",
  "figura.docs.group.lists": "Включает в себя все строковые значения используемые в других функциях",

  "figura.docs.list.empty": "В этом списке нету значений!",
  "figura.docs.list.keybinds": "Список всех доступных кнопок горячих клавиш. Используется в KeybindAPI.",
  "figura.docs.list.parent_types": "Список всех доступных типов родителей (ParentTypes). Используется в ModelParts.",
  "figura.docs.list.render_types": "Список всех доступных типов рендера (RenderTypes). Используется в ModelParts.",
  "figura.docs.list.texture_types": "Список доступных типов текстур (TextureTypes). Используется в ModelParts.",
  "figura.docs.list.key_ids": "Список доступных идентификаторов кнопок (KeyIDs). Используется в KeybindAPI.",
  "figura.docs.list.entity_poses": "Список доступных поз сущностей (EntityPoses). Используется в EntityAPI.",
  "figura.docs.list.item_render_types": "Список всех доступных типов рендера (RenderTypes). Используется в Item RenderTask.",
  "figura.docs.list.post_effects": "Список доступных пост эффектов (PostEffects). Используется в RendererAPI.",
  "figura.docs.list.play_states": "Список доступных состояний анимации (PlayStates). Используется в Blockbench анимациях.",
  "figura.docs.list.loop_modes": "Список доступных режимов зацикливания (LoopModes). Используется в Blockbench анимациях.",

  "figura.docs.globals": "Документация для различных глобальных переменных которые Figura добавляет в Lua.",
  "figura.docs.globals.vectors": "Глобальный экземпляр типа VectorsAPI.",
  "figura.docs.globals.vec": "Альтернатива для \"vectors.vec\", потому-что используется очень часто.",
  "figura.docs.globals.matrices": "Глобальный экземпляр типа MatricesAPI.",
  "figura.docs.globals.events": "Глобальный экземпляр типа EventsAPI.",
  "figura.docs.globals.vanilla_model": "Глобальный экземпляр типа VanillaModelAPI.",
  "figura.docs.globals.world": "Глобальный экземпляр типа WorldAPI.",
  "figura.docs.globals.player": "Глобальный экземпляр типа Player, предоставляющий доступ к сущности которую использует аватар.",
  "figura.docs.globals.particle": "Глобальный экземпляр типа ParticleAPI.",
  "figura.docs.globals.sound": "Глобальный экземпляр типа SoundAPI.",
  "figura.docs.globals.nameplate": "Глобальный экземпляр типа NameplateAPI.",
  "figura.docs.globals.client": "Глобальный экземпляр типа ClientAPI.",
  "figura.docs.globals.action_wheel": "Глобальный экземпляр типа ActionWheelAPI.",
  "figura.docs.globals.models": "Глобальный экземпляр типа ModelPart. Часть, включающая в себя все блокбенч модели вашего аватара. Каждый bbmodel файл вложен в эту часть.",
  "figura.docs.globals.animations": "Глобальный экземпляр таблицы с анимациями. Эта таблица содержит анимации моделей. Получить доступ к анимациям моделей можно если использовать имя модели как ключ для таблицы - \"animations.YOUR_MODEL_NAME\".",
  "figura.docs.globals.require": "Функция require() принимает в себя имя одного из ваших скриптов, без расширения \".lua\". Если скрипт ещё не был запущен, функция запустит этот скрипт и вернёт значение, которое возвращает скрипт. Если он уже был запущен, тогда функция не будет запускать файл повторно, но вернёт то-же значение что и в первый раз. Если скрипт ничего не возвращает, тогда require() вернёт true. Если введённое имя не соответсвует ни одному из названий скриптов, произойдёт ошибка.",
  "figura.docs.globals.print": "Функция которая выводит приведённые аргументы в чат. Хоть в синтаксисе указано что функция принимает только одно значение, вы можете вносить в аргументы столько, сколько Вам угодно. Все они будут выведены, и разделены пробелами.",
  "figura.docs.globals.log": "Альтернатива для print().",
  "figura.docs.globals.print_table": "Первый аргумент это таблица, или объект одного из типов которые Figura добавляет. Выводит в чат таблицу с специальным форматированием. Если первый аргумент не таблица, а объект Figura, автоматически конвертирует его в таблицу или строку, после чего выводится. В случае, если в таблице присутствуют другие таблицы, аргумент \"maxDepth\" определяет на сколько функция может войти внутрь. БУДЬТЕ ОСТОРОЖНЫ С РЕКУРСИВНЫМИ ТАБЛИЦАМИ! Если вы попытаетесь вывести очень глубокую таблицу, ваша игра может зависнуть пока просчитывает весь текст который нужно вывести, а в некоторых случаях вам вообще нужно будет перезапустить клиент. Стандартное значение для maxDepth: 1.",
  "figura.docs.globals.log_table": "Альтернатива для printTable().",
  "figura.docs.globals.print_json": "Принимает Minecraft JSON строку, после чего выводит её форматированно.",
  "figura.docs.globals.log_json": "Альтернатива для printJson().",
  "figura.docs.globals.host": "Глобальный экземпляр типа HostAPI.",
  "figura.docs.globals.meta": "Глобальный экземпляр типа MetaAPI.",
  "figura.docs.globals.renderer": "Глобальный экземпляр типа RendererAPI.",
  "figura.docs.globals.keybind": "Глобальный экземпляр типа KeybindAPI.",
  
  "figura.docs.math": "Включает в себя функции которые Figura добавляет к стандартной таблице библиотеки \"math\".",
  "figura.docs.math.lerp": "Линейно интерполирует первое значение ко второму с помощью третьего значения. Работает как и с числами, так и с векторами.",
  "figura.docs.math.clamp": "Возвращает значение переданное в функцию, ограниченную параметрами min и max.",
  "figura.docs.math.round": "Округляет число к ближайшему целочисленному.",
  "figura.docs.math.map": "Переводит введённое значение из одного диапазона в другой. Например, у вас есть значение 20 в диапазоне 0-200, и вы хотите перевести его в диапазон 100-200. В таком случае результатом будет 110",
  "figura.docs.math.short_angle": "Возвращает ближайший угол между двумя углами. Например, у вас есть угол 350, и вы хотите найти ближайший угол между этим углом и углом в 0 градусов. В таком случае результатом будет 10.",
  "figura.docs.math.lerp_angle": "Тоже самое что и обычный lerp, но значение ограничены диапазоном 0-360. Интерполяция производится в сторону кратчайшего угла. Например, интерполяция 75% (0.75) между 340 и 20 вернёт угол 310.",
  "figura.docs.math.sign": "Возвращает знак введённого числа. Если оно больше нуля - вернёт 1, меньше нуля - -1, и если равно нулю - вернёт 0.",

  "figura.docs.sound": "Глобальное API которое используется для проигрывания звуков. Доступ осуществляется с помощью переменной \"sound\".",
  "figura.docs.sound.play_sound": "Проигрывает определённый звук, на определённой позиции, с определённой громкостью, и определённым модификатором тональности. ID звука это идентификатор пользовательского звука. Громкость (volume) в Minecraft отвечает за то, на каком расстоянии звук можно будет услышать, а не на саму громкость звука. Если вы не дадите значение тональности (pitch) и громкости (volume), будут использованы стандартные значения - 1.",
  "figura.docs.sound.stop_sound": "Останавливает звуки проигрываемые аватаров. Если указать ID, функция остановит только звук с этим идентификатором.",

  "figura.docs.particle": "Глобальное API, которое использует для работы с частицами в Minecraft. На данный момент может использоваться для призыва частиц. Доступ осуществляется при помощи переменной \"particle\".",
  "figura.docs.particle.add_particle": "Создаёт частицу с заданным именем, на определённой позиции, с заданной скоростью. Некоторые частицы имеют специальные параметры, например, частица с id \"dust\". Для таких частиц, специальные параметры могут быть указаны в вместе с именем частицы, так же как это работает в коммандах.",

  "figura.docs.nameplate": "Глобальное API, которое даёт доступ к кастомизации никнейма в чате, над вашей головой, и в списке игроков.",
  "figura.docs.nameplate.chat": "Используется для кастомизации вашего никнейма в чате.",
  "figura.docs.nameplate.entity": "Используется для кастомизации вашего никнейма над головой.",
  "figura.docs.nameplate.list": "Используется для кастомизации вашего никнейма в списке игроков.",

  "figura.docs.nameplate_customization": "Функции для кастомизации вашего никнейма.",
  "figura.docs.nameplate_customization.get_text": "Получает текущий видимый никнейм.",
  "figura.docs.nameplate_customization.set_text": "Изменяет текущий видимый никнейм.",
  "figura.docs.nameplate_customization.get_pos": "Получает сдвиг никнейма в формате мировых координат. Может быть использовано только на никнейме СУЩНОСТИ.",
  "figura.docs.nameplate_customization.set_pos": "Задаёт сдвиг никнейма в формате мировых координат. Может быть использовано только на никнейме СУЩНОСТИ.",
  "figura.docs.nameplate_customization.get_scale": "Получает модификатор размера никнейма. Может быть использовано только на никнейме СУЩНОСТИ.",
  "figura.docs.nameplate_customization.set_scale": "Задаёт модификатор размера никнейма. Может быть использовано только на никнейме СУЩНОСТИ.",
  "figura.docs.nameplate_customization.is_visible": "Возвращает true или false в зависимости от того, виден ли никнейм. Может быть использовано только на никнейме СУЩНОСТИ.",
  "figura.docs.nameplate_customization.set_visible": "Задаёт, может ли быть виден никнейм. Может быть использовано только на никнейме СУЩНОСТИ.",

  "figura.docs.animation": "Анимация из .bbmodel файла.",
  "figura.docs.animation.name": "Имя анимации.",
  "figura.docs.animation.play": "Инициализирует анимацию. Продолжает проигрывание анимации, если она на паузе.",
  "figura.docs.animation.pause": "Ставит проигрывание анимации на паузу.",
  "figura.docs.animation.stop": "Останавливает проигрывание анимации.",
  "figura.docs.animation.restart": "Перезапускает анимацию. Проигрывает анимацию, если она остановлена. Результат этой функции может быть так-же достигнут при помощи вызова функции остановки, а затем вызова функции проигрывания анимации.",
  "figura.docs.animation.get_time": "Возвращает текущее время в анимации.",
  "figura.docs.animation.set_time": "Устанавливает текущее время в анимации.",
  "figura.docs.animation.get_play_state": "Возвращает текущее состояние анимации.",
  "figura.docs.animation.add_code": "Добавляет кусок кода, который нужно исполнить в определённое время. Если в указанное время уже запускается какой-либо код, функция его перезапишет.",
  "figura.docs.animation.blend": "Устанавливает размер сглаживания ключевых кадров в анимации.",
  "figura.docs.animation.offset": "Устанавливает, сколько времени нужно пропустить. Время пропускается при каждом повторном запуске анимации.",
  "figura.docs.animation.start_delay": "Устанавливает, сколько времени нужно ожидать перед инициализацией анимации. Во время ожидания, анимация так-же считается запущенной.",
  "figura.docs.animation.loop_delay": "Устанавливает, сколько времени нужно ожидать перед повторным запуском анимации.",
  "figura.docs.animation.length": "Устанавливает длинну анимации в секундах.",
  "figura.docs.animation.override": "Устанавливает, должна ли анимация перезаписывать положение анимированных частей.",
  "figura.docs.animation.loop": "Устанавливает текущий режим зацикливания анимации.",
  "figura.docs.animation.priority": "Устанавливает приоритет анимации. Вместо сглаживания, анимации с низшим приоритетом будут перезаписаны анимациями с высшим.",
  "figura.docs.animation.speed": "Устанавливает скорость проигрывания анимации. Отрицательные значения могут быть использованы для отражённых анимаций.",

  "figura.docs.action_wheel": "Глобальное API для взаимодействия с колесом действий игрока",
  "figura.docs.action_wheel.left_click": "Функция которая вызывается при нажатии левой кнопки мыши.",
  "figura.docs.action_wheel.right_click": "Функция которая вызывается при нажатии правой кнопки мыши.",
  "figura.docs.action_wheel.scroll": "Функция которая вызывается при прокрутке колеса мыши.",
  "figura.docs.action_wheel.execute": "Вызывает действие по указанному индексу. Если индекс не указан, или равняется nil, функция исполнит последнее выбранное действие. Второй параметр может быть задан, если нужно указать, при помощи какой клавиши нужно исполнить действие.",
  "figura.docs.action_wheel.is_enabled": "Возвращает true если колесо действий сейчас отрисовывается, и false если нет.",
  "figura.docs.action_wheel.get_selected": "Возвращает индекс текущего выбранного действия.",
  "figura.docs.action_wheel.create_page": "Создаёт новую страницу для колеса действий. Вы можете выдать заголовок странице, что бы сохранить её в памяти мода. Если заголовок не задан, функция просто вернёт экземпляр страницы.",
  "figura.docs.action_wheel.set_page": "Устанавливает страницу колесу действий, заменяя её либо на переданную страницу, либо на страницу найденную по заголовку в памяти.",
  "figura.docs.action_wheel.get_page": "Возвращает сохранённую страницу найденную по заголовку в памяти.",

  "figura.docs.wheel_page": "Страница колеса действий, на которой может хранится до 8 действий.",
  "figura.docs.wheel_page.new_action": "Добавляет новое действие при клике (Click Action) на выбранной странице. Если индекс не приведён, тогда действие создастся на первом доступном индексе.",
  "figura.docs.wheel_page.new_toggle": "Добавляет новое действие при переключении (Toggle Action) на выбранной странице. Если индекс не приведён, тогда действие создастся на первом доступном индексе.",
  "figura.docs.wheel_page.new_scroll": "Добавляет новое действие при прокрутке (Scroll Action) на выбранной странице. Если индекс не приведён, тогда действие создастся на первом доступном индексе.",
  "figura.docs.wheel_page.get_action": "Получает действие на странице по индексу.",

  "figura.docs.wheel_action": "Действие в колесе действий Figura. Абстрактный тип, который наследуют такие типы как ClickAction, ToggleAction, и ScrollAction.",
  "figura.docs.wheel_action.title": "Устанавливает заголовок действия. Возвращает изменённое действие.",
  "figura.docs.wheel_action.color": "Устанавливает цвет действия. Возвращает изменённое действие.",
  "figura.docs.wheel_action.hover_color": "Устанавливает цвет действия при наведении. Возвращает изменённое действие.",
  "figura.docs.wheel_action.item": "Устанавливает предмет действия. Возвращает изменённое действие.",
  "figura.docs.wheel_action.hover_item": "Устанавливает предмет действия при наведении. Возвращает изменённое действие.",

  "figura.docs.click_action": "Действие, которое выполняется при клике.",
  "figura.docs.click_action.left_click": "Функция которая выполняется при нажатии левой кнопки мыши.",
  "figura.docs.click_action.right_click": "Функция которая выполняется при нажатии правой кнопки мыши.",
  "figura.docs.click_action.on_left_click": "Устанавливает функцию которая выполняется при нажатии левой кнопки мыши. Возвращает изменённое действие.",
  "figura.docs.click_action.on_right_click": "Устанавливает функцию которая выполняется при нажатии правой кнопки мыши. Возвращает изменённое действие.",

  "figura.docs.toggle_action": "Действие, которое выполняется при переключении.",
  "figura.docs.toggle_action.toggle": "Функция которая вызывается при переключении в состояние [ВКЛ].",
  "figura.docs.toggle_action.untoggle": "Функция которая вызывается при переключении в состояние [ВЫКЛ].",
  "figura.docs.toggle_action.on_toggle": "Устанавливает функцию которая вызывается при переключении в состояние [ВКЛ]. Возвращает изменённое действие.",
  "figura.docs.toggle_action.on_untoggle": "Устанавливает функцию которая вызывается при переключении в состояние [ВЫКЛ]. Возвращает изменённое действие.",
  "figura.docs.toggle_action.toggle_title": "Устанавливает заголовок действия, когда оно в состоянии [ВКЛ]. Возвращает изменённое действие.",
  "figura.docs.toggle_action.toggle_color": "Устанавливает цвет действия, когда оно в состоянии [ВКЛ]. Возвращает изменённое действие.",
  "figura.docs.toggle_action.toggle_item": "Устанавливает предмет действия, когда оно в состоянии [ВКЛ]. Возвращает изменённое действие.",
  "figura.docs.toggle_action.toggled": "Устанавливает текущее состояние действия. Возвращает изменённое действие.",
  "figura.docs.toggle_action.is_toggled": "Возвращает состояние действия. [ВКЛ] - true, [ВЫКЛ] - false.",

  "figura.docs.scroll_action": "Действие, которое выполняется при прокручивании колеса мыши.",
  "figura.docs.scroll_action.scroll": "Функция которая выполняется при прокрутке колеса мыши.",
  "figura.docs.scroll_action.on_scroll": "Устанавливает функцию которая выполняется при прокрутке колеса мыши. Возвращает изменённое действие.",

  "figura.docs.render_task": "Задача отрисовки Figura которая выполняется каждый кадр. Абстрактный тип, который наследуют такие типы как ItemTask, BlockTask, и TextTask.",
  "figura.docs.render_task.enabled": "Должна-ли эта задача отрисовываться.",
  "figura.docs.render_task.emissive": "Должна-ли эта задача отрисовываться с полной яркостью.",
  "figura.docs.render_task.pos": "Расположение задачи, относительно части к которой она прикреплена. Использует координаты модели (16 - 1 блок).",
  "figura.docs.render_task.rot": "Поворот задачи, относительно части к которой она прикреплена.",
  "figura.docs.render_task.scale": "Размер задачи, относительно части к которой она прикреплена.",

  "figura.docs.item_task": "Задача для отрисовки предмета.",
  "figura.docs.item_task.item": "Устанавливает предмет для этой задачи.",
  "figura.docs.item_task.render_type": "Устанавливает тип отрисовки предмета для этой задачи.",

  "figura.docs.block_task": "Задача для отрисовки блока.",
  "figura.docs.block_task.block": "Устанавливает блок для этой задачи.",

  "figura.docs.text_task": "Задача для отрисовки текста.",
  "figura.docs.text_task.text": "Устанавливает текс для этой задачи.",
  "figura.docs.text_task.centred": "Должен ли текст быть центрированным.",
  "figura.docs.text_task.shadow": "Должен ли текст отбрасывать тень. Не совместим с режимом \"Outline\"",
  "figura.docs.text_task.outline": "Есть ли у текста обводка. Всегда отрисовывается с максимальной яркостью. Не совместим с режимами \"Shadow\" и \"Emissive\"",
  "figura.docs.text_task.outline_color": "Устанавливает цвет обводки текста. Совместимо только с режимом \"Outline\"",

  "figura.docs.world": "Глобальное API для чтения информации из мира Minecraft. Доступ осуществляется с помощью переменной \"world\".",
  "figura.docs.world.get_biome": "Возвращает биом на определённой позиции.",
  "figura.docs.world.get_blockstate": "Возвращает состояние блока (BlockState) на определённой позиции.",
  "figura.docs.world.get_redstone_power": "Возвращает уровень заряда редстоуна в блоке на определённой позиции.",
  "figura.docs.world.get_strong_redstone_power": "Возвращает уровень направленного заряда редстоуна в блоке на определённой позиции.",
  "figura.docs.world.get_time": "Возвращает текущее игровое время мира. Если дельта введена, она добавляется к времени. Стандартное значение дельты - 0.",
  "figura.docs.world.get_time_of_day": "Возвращает текущее игровое время дня. Если дельта введена, она добавляется к времени. Стандартное значение дельты - 0.",
  "figura.docs.world.get_moon_phase": "Возвращает текущую фазу луны.",
  "figura.docs.world.get_rain_gradient": "Возвращает значение текущего градиента дождя в мире, интерполированное от значения предыдущего тика до значения текущего. Изначальная дельта равна 1, что является текущим тиком.",
  "figura.docs.world.is_thundering": "Идёт ли сейчас в мире гроза.",
  "figura.docs.world.get_light_level": "Возвращает общий уровень освещения на определённой позиции.",
  "figura.docs.world.get_sky_light_level": "Возвращает уровень освещения небесного на определённой позиции.",
  "figura.docs.world.get_block_light_level": "Возвращает уровень освещение от блока на определённой позиции.",
  "figura.docs.world.is_open_sky": "Возвращает, под открытым ли небом указанная позиция.",
  "figura.docs.world.get_players": "Возвращает таблицу включающую в себя экземпляры типа Player для всех игроков в мире. Игроки проиндексированы их именами.",
  "figura.docs.world.exists": "Проверяет, существует ли мир сейчас. Почти всегда будет возвращать true, но может быть false в некоторых случаях по типу перемещения между измерениями.",

  "figura.docs.blockstate": "Состояние блока. Объект данного типа можно получить из WorldAPI. Состояние блока так же хранит его позицию.",
  "figura.docs.blockstate.id": "Идентификатор блока.",
  "figura.docs.blockstate.properties": "Таблица в которой содержатся свойства этого состояния блока. Если это состояние блока не имеет свойств, она будет нулевой (nil).",
  "figura.docs.blockstate.get_pos": "Возвращает сохранённую позицию для этого состояния блока. Сохранённая позиция используется в функциях состояния блока которым нужна позиция.",
  "figura.docs.blockstate.set_pos": "Устанавливает сохранённую позицию для этого состояния блока. Сохранённая позиция используется в функциях состояния блока которым нужна позиция.",
  "figura.docs.blockstate.exists": "Проверяет, существует ли это состояние блока. У меня нету идей, в какой ситуации оно может не существовать, но эта функция существует для проверки этого.",
  "figura.docs.blockstate.is_translucent": "Проверяет, может ли этот блок пропускать свет вниз.",
  "figura.docs.blockstate.get_opacity": "Получает непрозрачность блока, или же то, как сильно он влияет на уровни света.",
  "figura.docs.blockstate.get_map_color": "Получает цвет этого состояния блока на карте в формате Vector3, со значениями R,G,B в диапазоне от 0 до 1.",
  "figura.docs.blockstate.is_solid_block": "Является ли блок твёрдым с точки зрения Minecraft.",
  "figura.docs.blockstate.is_full_cube": "Занимается ли хитбокс этого блока весь воксель?",
  "figura.docs.blockstate.has_emissive_lightning": "Распространяет ли блок свет?",
  "figura.docs.blockstate.get_hardness": "Твёрдость блока.",
  "figura.docs.blockstate.get_comparator_output": "Сила сигнала компаратора полученная из этого блока.",
  "figura.docs.blockstate.has_block_entity": "Есть ли у этого состояния блока асоциируемая сущность блока?",
  "figura.docs.blockstate.is_opaque": "Непрозрачный ли блок?",
  "figura.docs.blockstate.emits_redstone_power": "Распространяет ли блок сигнал редстоуна.",
  "figura.docs.blockstate.get_luminance": "Сила свечения блока.",
  "figura.docs.blockstate.get_friction": "Сила трения блока. (Используется льдом и блоком слизи в ванилле)",
  "figura.docs.blockstate.get_velocity_multiplier": "Модификатор скорости этого состояние блока. (Используется только песком душ и блоком мёда в ванилле)",
  "figura.docs.blockstate.get_jump_velocity_multiplier": "Модификатор скорости прыжка с этого блока. (Используется только блоком мёда)",
  "figura.docs.blockstate.get_blast_resistance": "Сопротивление к взрывам которое имеет этот блок.",
  "figura.docs.blockstate.as_item": "Возвращает стак предметов (ItemStack) который соответствует этому блоку. Если этот блок не может быть предметом, возвращает nil.",
  "figura.docs.blockstate.get_tags": "Возвращает таблицу содержащую все теги блока как строки.",
  "figura.docs.blockstate.get_material": "Материал блока.",
  "figura.docs.blockstate.get_has_collision": "Имеет ли этот блок коллизию.",
  "figura.docs.blockstate.get_collision_shape": "Возвращает таблицу, в которой находятся кубы, описывающую форму коллизии блока. Таблица является списком Vector6, в котором первые 3 координаты, это первый угол куба, и последнии три координаты - второй угол куба.",
  "figura.docs.blockstate.get_outline_shape": "Возвращает таблицу содержащуюю кубы, которые описывают форму обводки блока. Таблица является списком Vector6, в котором первые 3 координаты, это первый угол куба, и последнии три координаты - второй угол куба.",
  "figura.docs.blockstate.get_sounds": "Возвращает все звуки, которые могут быть проиграны этим блоком.",
  "figura.docs.blockstate.get_fluid_tags": "Возвращает таблицу содержащую все теги жидкости этого блока, как строки.",
  "figura.docs.blockstate.get_entity_data": "Возвращает NBT данные сущности этого блока.",
  "figura.docs.blockstate.to_state_string": "Конвертирует состояние блока в строку.",

  "figura.docs.itemstack": "Экземпляр стака предметов (ItemStack).",
  "figura.docs.itemstack.id": "Хранит ID предмета который содержится в этом стаке предметов.",
  "figura.docs.itemstack.tag": "Таблица с NBT тегами, которые содержит этот стак предметов. Если у этого стака нету тегов, таблица будет нулевой (nil).",
  "figura.docs.itemstack.exists": "Проверяет, существует ли этот стак предметов на данный момент. Minecraft может удалить стак предметов в некоторых случаях. Я не думаю что он может удалится пока он в чъём то инвентаре, или лежит на земле, но всё же проверять стоит. Свяжитесь в разработчиками, если у вас есть ответ, когда стак предметов может прекращать существование!",
  "figura.docs.itemstack.get_count": "Получает количество предметов в стаке.",
  "figura.docs.itemstack.get_damage": "Повреждённость предмета. Работает на вещах по типу инструментов, и других вещах которые имеют полоску состояния.",
  "figura.docs.itemstack.get_cooldown": "Оставшийся кулдаун (в тиках) на этом предмете.",
  "figura.docs.itemstack.has_glint": "Возвращает true если этот предмет имеет мерцание от зачарования.",
  "figura.docs.itemstack.get_tags": "Получает все теги предмета как таблицу со строками.",
  "figura.docs.itemstack.is_block_item": "Возвращает true если этот предмет является блоком.",
  "figura.docs.itemstack.is_food": "Возвращает true если этот предмет является съедобным.",
  "figura.docs.itemstack.get_use_action": "Возвращает имя анимации при использовании этого предмета.",
  "figura.docs.itemstack.get_name": "Имя предмета.",
  "figura.docs.itemstack.get_max_count": "Максимальное количество предметов в стаке..",
  "figura.docs.itemstack.get_rarity": "Редкость этого предмета. COMMON = белый, UNCOMMON = жёлтый, RARE = голубой, EPIC = светло фиолетовый.",
  "figura.docs.itemstack.is_enchantable": "Возвращает true если этот предмет можно положить на стол зачарования.",
  "figura.docs.itemstack.get_max_damage": "Максимальная прочность этого предмета.",
  "figura.docs.itemstack.is_damageable": "Возвращает true если у этого стака предметов есть прочность.",
  "figura.docs.itemstack.is_stackable": "Возвращает true если этот предмет стакабельный.",
  "figura.docs.itemstack.get_repair_cost": "Модификатор стоимости починки на наковальне для этого стака предметов.",
  "figura.docs.itemstack.get_use_duration": "Количество тиков нужное для \"использования\" этого предмета. На данный момент используется для предметов еды. Всегда 32 для еды, за исключением ламинарии, у которой это значение является 16.",
  "figura.docs.itemstack.to_stack_string": "Конвертирует этот стак предметов в строку.",

  "figura.docs.biome": "Биом. Объект данного типа можно получить из WorldAPI. Биом так же хранит его позицию.",
  "figura.docs.biome.name": "Имя биома, указанное в регистре.",
  "figura.docs.biome.exists": "Проверяет, существует ли биом. У меня нету идей, в какой ситуации он может не существовать, но эта функция существует для проверки этого.",
  "figura.docs.biome.get_pos": "Возвращает сохранённую позицию для этого биома. Сохранённая позиция используется в функциях биома, которым нужна информация о позиции.",
  "figura.docs.biome.set_pos": "Устанавливает сохранённую позицию для этого биома. Сохранённая позиция используется в функциях биома, которым нужна информация о позиции.",
  "figura.docs.biome.get_temperature": "Температура биома.",
  "figura.docs.biome.get_precipitation": "Тип дождя для этого биома. Может быть \"NONE\", \"RAIN\" или \"SNOW\".",
  "figura.docs.biome.get_sky_color": "Цвет неба в этом биоме как RGB вектор.",
  "figura.docs.biome.get_foliage_color": "Цвет листвы в этом биоме как RGB вектор.",
  "figura.docs.biome.get_grass_color": "Цвет травы в этом биоме как RGB вектор.",
  "figura.docs.biome.get_fog_color": "Цвет тумана в этом биоме как RGB вектор.",
  "figura.docs.biome.get_water_color": "Цвет воды в этом биоме как RGB вектор.",
  "figura.docs.biome.get_water_fog_color": "Цвет тумана в воде в этом биоме как RGB вектор.",
  "figura.docs.biome.get_downfall": "Влажность этого биома.",
  "figura.docs.biome.is_hot": "Является ли биом горячим.",
  "figura.docs.biome.is_cold": "Является ли биом холодным.",

  "figura.docs.model_part": "Нода в дрвев модели, или-же группа/куб/модель в Blockbench. Каждый bbmodel сам по себе является частью модели (ModelPart), и все ваши модели содержатся в глобальной части модели, доступ к которой можно получить с помощью переменной \"models\".",
  "figura.docs.model_part.name": "Имя части модели.",
  "figura.docs.model_part.get_parent": "Возвращает часть модели, в которую вложена эта часть модели. Если часть модели ни во что не вложена, возвращает nil.",
  "figura.docs.model_part.get_children": "Возвращает таблицу с частями моделей, который вложены в эту часть модели.",
  "figura.docs.model_part.get_pos": "Получает смещение части модели, а именно отклонение от её позиции в Blockbench. Меняется с {0,0,0} только после вызова setPos().",
  "figura.docs.model_part.set_pos": "Устанавливает смещение относительно позиции этой части в Blockbench. Значение nil расценивается как 0.",
  "figura.docs.model_part.get_anim_pos": "Смещение позиции в анимации которая сейчас проигрывается.",
  "figura.docs.model_part.get_rot": "Получает поворот части, включая поворот в Blockbench. Для относительного поворота, ознакомитесь с \"offset\" фукнциями.",
  "figura.docs.model_part.set_rot": "Устанавливает абсолютный поворот этой части. Углы поворота представлены в градусах. Для относительного поворота, ознакомитесь с \"offset\" фукнциями.",
  "figura.docs.model_part.get_offset_rot": "Дополнительные значения поворота части модели. Для получения абсолютных значений поворота, ознакомьтесь с не \"offset\" функциями поворота.",
  "figura.docs.model_part.offset_rot": "Устанавливает дополнительные значения поворота для этой части. Углы поворота представлены в градусах. Для получения абсолютных значений поворота, ознакомьтесь с не \"offset\" функциями поворота.",
  "figura.docs.model_part.get_anim_rot": "Поворот части в анимации которая сейчас проигрывается.",
  "figura.docs.model_part.get_scale": "Размер части модели.",
  "figura.docs.model_part.set_scale": "Устанавливает размер части модели.",
  "figura.docs.model_part.get_anim_scale": "Модификатор размера в анимации которая сейчас проигрывается.",
  "figura.docs.model_part.get_pivot": "Получает опорную точку части модели, включая опорную точку в Blockbench. Для работы с относительными опорными точками, используйте \"offset\" функции.",
  "figura.docs.model_part.set_pivot": "Устанавливает абсолютную опорную точку. Для работы с относительными опорными точками, используйте \"offset\" функции.",
  "figura.docs.model_part.get_offset_pivot": "Получает относительную опорную точку части модели. Для абсолютных опорных точек используйте с не \"offset\" функциями.",
  "figura.docs.model_part.offset_pivot": "Устанавливает относительную опорную точку части модели. Для абсолютных опорных точек используйте с не \"offset\" функциями.",
  "figura.docs.model_part.get_position_matrix": "Пересчитывает матрицу для этой модели, основываясь на её позиции, повороте, размере, и опорной точке, а затем возвращает эту матрицу.",
  "figura.docs.model_part.get_position_matrix_raw": "Возвращает матрицу модели. \"Сырая\" версия функции отличается от оригинальной тем, что она не пересчитывает матрицу.",
  "figura.docs.model_part.get_normal_matrix": "Пересчитывает матрицу нормали для этой модели, основываясь на её позиции, повороте, размере, и опорной точке, а затем возвращает эту матрицу.",
  "figura.docs.model_part.get_normal_matrix_raw": "Возвращает матрицу нормали. \"Сырая\" версия функции отличается от оригинальной тем, что она не пересчитывает матрицу.",
  "figura.docs.model_part.set_matrix": "Устанавливает матрицу позиции для этой части модели. Матрица нормали автоматически пересчитывается как результат инвертированого транспонирования матрицы. Вызов этой функции НЕ МЕНЯЕТ значения поворота, позиции, и размера для этой части модели. Если вы вызовете \"setPos()\" или похожую функция, эффект \"setMatrix()\" будет перезаписан.",
  "figura.docs.model_part.get_visible": "Видна ли часть модели. Стандартное значение - \"nil\", что означает что оно копирует видимость этой части во время отрисовки.",
  "figura.docs.model_part.set_visible": "Устанавливает, видна ли часть модели. Стандартное значение - \"nil\", что означает что оно копирует видимость этой части во время отрисовки. Если вы хотите установить видимость обратно в значение \"nil\", лучше используйте функцию \"resetVisible()\".",
  "figura.docs.model_part.reset_visible": "Сбрасывает видимость этой части модели. Стандартное значение - \"nil\", что означает что оно копирует видимость этой части во время отрисовки.",
  "figura.docs.model_part.get_primary_render_type": "Текущий основной тип рендера для этой части модели. По умолчанию \"nil\", что означает что часть модели копирует тип рендера от родителя.",
  "figura.docs.model_part.get_secondary_render_type": "Дополнительный тип рендера для этой части модели. По умолчанию \"nil\", что означает что часть модели копирует тип рендера от родителя.",
  "figura.docs.model_part.set_primary_render_type": "Устанавливает текущий основной тип рендера для этой части модели. По умолчанию \"nil\", что означает что часть модели копирует тип рендера от родителя. Проверьте документацию для получения списка всех доступных типов рендера.",
  "figura.docs.model_part.set_secondary_render_type": "Устанавливает текущий дополнительный тип рендера для этой части модели. По умолчанию \"nil\", что означает что часть модели копирует тип рендера от родителя. Проверьте документацию для получения списка всех доступных типов рендера.",
  "figura.docs.model_part.set_primary_texture": "Устанавливает основную текстуру для этой части модели. Проверьте документацию, для того что бы получить все доступные типы текстур. Если вы используете параметр \"resource\", вторым параметров вы должны указать путь до текстуры Mineraft которую вы хотите использовать.",
  "figura.docs.model_part.set_secondary_texture": "Устанавливает дополнительную текстуру для этой части модели. Проверьте документацию, для того что бы получить все доступные типы текстур. Если вы используете параметр \"resource\", вторым параметров вы должны указать путь до текстуры Mineraft которую вы хотите использовать.",
  "figura.docs.model_part.part_to_world_matrix": "Матрица которая содержит в себе позицию части в мировых координатах. Рекомендуется использовать эту функцию в \"POST_RENDER\", после обновления матрицы. В \"RENDER\" позиция будет запаздывать на 1 кадр. Так-же, если часть модели не отрисовывается в мире, матрица не будет обновлена. Отрисовка куклы и другие рендеры в UI не будут влиять на эту матрицу.",
  "figura.docs.model_part.get_texture_size": "Получает ширину и высоту текстуры этой части модели в пикселях. Если часть имеет несколько текстур, размеры которых различаются, происходит ошибка.",
  "figura.docs.model_part.set_uv": "Устанавливает UV этой части. Эта функция нормализована, что означает что она принимает значения от 0 до 1. Например, вызов \"setUV(0.5, 0.25)\" установит смещение UV на половину текстуры по горизонтали, и на одну четвёртую по вертикали.",
  "figura.docs.model_part.set_uv_pixels": "Устанавливает UV этой части в пикселях. Автоматически разделяется на результат который выдаёт функция \"getTextureSize()\", так что вы можете просто ввести количество пикселей, на которое вы хотите сместить UV. Происходит ошибка, если часть имеет текстуры с разным размером.",
  "figura.docs.model_part.set_uv_matrix": "Устанавливает UV матрицу для этой части. Матрица применяется ко всем точкам UV. \"setUv()\" и \"setUvPixels()\" просто помогают проще задавать эту матрицу.",
  "figura.docs.model_part.set_color": "Устанавливает модификатор цвета для этой части. Значения от 0 до 1. Стандартные значения - 1, то есть без изменения цвета.",
  "figura.docs.model_part.get_color": "Модификатор цвета для этой части. Значения от 0 до 1. Стандартные значения - 1, то есть без изменения цвета.",
  "figura.docs.model_part.set_opacity": "Устанавливает модификатор прозрачности для этой части. Стоит отметить что измнение непрозрачности будет иметь эффект только если часть имеет нужный тип рендера, обычно это \"TRANSLUCENT\". Рекомендуется проверить документацию для метода \"setPrimaryRenderType()\", что бы узнать как установить нужный вам тип рендера.",
  "figura.docs.model_part.get_opacity": "Модификатор прозрачности для этой части. Стоит отметить что измнение непрозрачности будет иметь эффект только если часть имеет нужный тип рендера, обычно это \"TRANSLUCENT\". Рекомендуется проверить документацию для метода \"setPrimaryRenderType()\", что бы узнать как установить нужный вам тип рендера.",
  "figura.docs.model_part.set_light": "Устанавливает уровень света который будет использоваться для этой части. Значение может быть от 0 до 15. При установки значения \"nil\" уровень освещения будет соответствовать стандартному освещению.",
  "figura.docs.model_part.get_light": "Получает уровень света который вы установили для этой части ранее. Не взаимодействует с системой освещения Minecraft,  возвращает только значение которое вы ранее установили через \"setLight()\".",
  "figura.docs.model_part.set_parent_type": "Устанавливает тип родителя для этой части. Все возможные типы родителей перечислены в документации \"ParentType\".",
  "figura.docs.model_part.get_parent_type": "Тип родителя для этой части.",
  "figura.docs.model_part.get_type": "Возвращает тип части. Может быть \"GROUP\", \"CUBE\", или \"MESH\".",
  "figura.docs.model_part.add_text": "Добавляет задачу отрисовки текста для этой части.",
  "figura.docs.model_part.add_item": "Добавляет задачу отрисовки предмета для этой части.",
  "figura.docs.model_part.add_block": "Добавляет задачу отрисовки блока для этой части.",
  "figura.docs.model_part.get_task": "Возвращает задачу отрисовки с определённым именем.",
  "figura.docs.model_part.remove_task": "Удаляет задачу отрисовки с определённым именем.",

  "figura.docs.vanilla_model": "Глобальное API, предоставляющее доступ к функциям ванильным частям модели. Доступ осуществляется с помощью переменной \"vanilla_model\".",
  "figura.docs.vanilla_model.head": "Голова игрока, не включая шляпу.",
  "figura.docs.vanilla_model.body": "Тело игрока, не включая второй слой.",
  "figura.docs.vanilla_model.left_arm": "Левая рука игрока, не включая второй слой.",
  "figura.docs.vanilla_model.right_arm": "Правая рука игрока, не включая второй слой.",
  "figura.docs.vanilla_model.left_leg": "Левая нога игрока, не включая второй слой.",
  "figura.docs.vanilla_model.right_leg": "Правая нога игрока, не включая второй слой.",
  "figura.docs.vanilla_model.hat": "Второй слой головы.",
  "figura.docs.vanilla_model.jacket": "Второй слой тела.",
  "figura.docs.vanilla_model.left_sleeve": "Второй слой левой руки.",
  "figura.docs.vanilla_model.right_sleeve": "Второй слой правой руки.",
  "figura.docs.vanilla_model.left_pants": "Второй слой левой ноги.",
  "figura.docs.vanilla_model.right_pants": "Второй слой правой ноги.",
  "figura.docs.vanilla_model.cape": "Мульти-часть: Плащ игрока.",
  "figura.docs.vanilla_model.cape_model": "Ванильная часть плаща.",
  "figura.docs.vanilla_model.fake_cape": "Пользовательная копия плаща, является попыткой сохранить его позицию потому что ванильная математика плаща... странная.",
  "figura.docs.vanilla_model.helmet": "Мульти-часть: Модель шлема",
  "figura.docs.vanilla_model.helmet_item": "Предмет в слоте шлема",
  "figura.docs.vanilla_model.helmet_head": "Первый слой шлема",
  "figura.docs.vanilla_model.helmet_hat": "Второй слой шлема.",
  "figura.docs.vanilla_model.chestplate": "Мульти-часть: Модель нагрудника.",
  "figura.docs.vanilla_model.chestplate_body": "Модель нагрудника на теле.",
  "figura.docs.vanilla_model.chestplate_left_arm": "Модель нагрудника на левой руке.",
  "figura.docs.vanilla_model.chestplate_right_arm": "Модель нагрудника на правой руке.",
  "figura.docs.vanilla_model.leggings": "Мульти-часть: Модель понож.",
  "figura.docs.vanilla_model.leggings_body": "Модель понож на теле.",
  "figura.docs.vanilla_model.leggings_left_leg": "Модель понож на левой ноге.",
  "figura.docs.vanilla_model.leggings_right_leg": "Модель понож на правой ноге.",
  "figura.docs.vanilla_model.boots": "Мульти-часть: Модель ботинок.",
  "figura.docs.vanilla_model.boots_left_leg": "Модель ботинка на левой ноге.",
  "figura.docs.vanilla_model.boots_right_leg": "Модель ботинка на правой ноге.",
  "figura.docs.vanilla_model.elytra": "Мульти-часть: Модель элитры.",
  "figura.docs.vanilla_model.left_elytra": "Модель левого крыла элитры.",
  "figura.docs.vanilla_model.right_elytra": "Модель правого крыла элитры.",
  "figura.docs.vanilla_model.held_items": "Мульти-часть: Предметы в руках игрока.",
  "figura.docs.vanilla_model.left_item": "Левый предмет в руках игрока.",
  "figura.docs.vanilla_model.right_item": "Правой предмет в руках игрока.",
  "figura.docs.vanilla_model.all": "Мульти-часть: Вся модель игрока.",
  "figura.docs.vanilla_model.outer_layer": "Мульти-часть: Второй слой скина игрока.",
  "figura.docs.vanilla_model.inner_layer": "Мульти-часть: Главной слой скина игрока.",
  "figura.docs.vanilla_model.armor": "Мульти-часть: Вся броня на игроке.",
  "figura.docs.vanilla_model.player": "Мульти-часть: Основной и второй слой скина игрока, включая плащ.",

  "figura.docs.vanilla_part": "Часть ванильной модели. Может быть видимой и невидимой, а так же есть возможность получить стандартные значения поворота и позиции.",
  "figura.docs.vanilla_part.set_visible": "Устанавливает видимость этой части.",
  "figura.docs.vanilla_part.get_visible": "Видима ли часть или нет. Возвращает только значение установленное в скрипте, не учитывая значение выставленное Minecraft'ом.",
  "figura.docs.vanilla_part.get_origin_rot": "Возвращает поворот части который сейчас установлен Minecraft'ом.",
  "figura.docs.vanilla_part.get_origin_pos": "Возвращает позицию части который сейчас установлен Minecraft'ом.",

  "figura.docs.vanilla_group": "Группа ванильных частей модели. Используется для лёгкого доступа к ванильным частям. Может быть только скрыт или показан.",
  "figura.docs.vanilla_group.set_visible": "Устанавливает видимость этой группы.",
  "figura.docs.vanilla_group.get_visible": "Видны ли части или нет. Возвращает только значение установленное в скрипте, не учитывая значение выставленное Minecraft'ом.",

  "figura.docs.entity": "Сущность в мире Minecraft",
  "figura.docs.entity.exists": "Проверяет, существует ли сущность, или нет. Может вернуть \"false\" если сущность покинула прогруженные чанки, умерла, или пропала из-за какой либо другой причины.",
  "figura.docs.entity.get_pos": "Получает позицию сущности. Если дельта приведена, то значение будет интерполировано с ещё помощью между позицией с предыдущего тика и позицией этого тика. Стандартное значение дельты - 1.",
  "figura.docs.entity.get_rot": "Получает поворот сущности в градусаъ. Если дельта приведена, то значение будет интерполировано с ещё помощью между поворотом с предыдущего тика и поворотом этого тика. Стандартное значение дельты - 1.",
  "figura.docs.entity.get_uuid": "Получает UUID сущности.",
  "figura.docs.entity.get_type": "Получает ID этой сущности. Например, у свиньи это будет, \"minecraft:pig\".",
  "figura.docs.entity.is_hamburger": "\"...\"",
  "figura.docs.entity.get_velocity": "Вектор скорости сущности, в формате BpT (Blocks Per Tick).",
  "figura.docs.entity.get_look_dir": "Вектор направления взгляда сущности. Увидить его можно при включении хитбоксов.",
  "figura.docs.entity.get_fire_ticks": "Сколько ещё тиков сущность будет гореть.",
  "figura.docs.entity.get_frozen_ticks": "Сколько ещё тиков сущность будет получать урон от обморожения.",
  "figura.docs.entity.get_air": "Сколько кислорода у сущности.",
  "figura.docs.entity.get_max_air": "Сколько всего у сущности может быть кислорода.",
  "figura.docs.entity.get_dimension_name": "Получает ID мира, в котором находится сущность.",
  "figura.docs.entity.get_pose": "Текущая поза сущности. Может принимать одно из этих значений: \"STANDING\", \"FALL_FLYING\", \"SLEEPING\", \"SWIMMING\", \"SPIN_ATTACK\", \"CROUCHING\", \"LONG_JUMPING\", или \"DYING\".",
  "figura.docs.entity.get_vehicle": "Возвращает сущность, на которой сидит текущая сущность. Если сущность ни на чём не сидит, вернётся \"nil\".",
  "figura.docs.entity.is_on_ground": "Стоит ли сейчас сущность на поверхности.",
  "figura.docs.entity.get_eye_height": "Возвращает текущую высоту глаз этой сущности.",
  "figura.docs.entity.get_bounding_box": "Хитбокс сущности как Vector3. X - ширина, Y - высота, Z - длинна.",
  "figura.docs.entity.get_name": "Возвращает имя сущности, если ей присвоено пользовательское имя. Если нет, возвращает стандартное имя этой сущности.",
  "figura.docs.entity.is_wet": "Возвращет \"true\" если сущность в воде или сущность под дождём. Иначе, возвращет \"false\".",
  "figura.docs.entity.is_in_water": "Находится ли сущность в воде.",
  "figura.docs.entity.is_underwater": "Находится ли сущность под водой.",
  "figura.docs.entity.is_in_lava": "Находится ли сущность в лаве.",
  "figura.docs.entity.is_in_rain": "Находится ли сущность под дождём.",
  "figura.docs.entity.has_avatar": "Есть ли у этой сущности аватар.",
  "figura.docs.entity.is_sprinting": "Бежит ли сейчас эта сущность.",
  "figura.docs.entity.get_eye_y": "Возвращает высоту глаз по координате Y. Не путать с getEyeHeight, данная функция так-же прибавляет к высоте глаз координаты сущности по Y.",
  "figura.docs.entity.is_glowing": "Имеет ли сущности эффект подвсетки.",
  "figura.docs.entity.is_invisible": "Является ли сущность невидимой..",
  "figura.docs.entity.is_silent": "Является ли сущность тихой.",
  "figura.docs.entity.is_sneaking": "В присяде ли сейчас сущность.",
  "figura.docs.entity.get_variable": "Возвращает значение переменной этой сущности, которое сохранено с помощь функции \"store()\" в Meta API.",
  "figura.docs.entity.get_item": "Возвращает стак предметов в определённом слоте.",
  "figura.docs.entity.get_nbt": "Возвращает таблицу содержащую NBT теги этой сущности.",
  "figura.docs.entity.is_on_fire": "Горит ли сейчас сущность.",
  "figura.docs.entity.get_targeted_block": "Возвращает блок, на который смотрит сущность.",

  "figura.docs.living_entity": "Живая сущность (Living entity) в мире Minecraft.",
  "figura.docs.living_entity.get_body_yaw": "Получает поворот тела по оси Y. Если приведена дельта, тогда возвращается значение интерполяции между поворотом прошлого тика и текущего тика с помощью дельты. Стандартное значение дельты - 1.",
  "figura.docs.living_entity.get_held_item": "Возвращает предмет который держит сущность. Если в параметр \"offhand\" передано \"true\", тогда вернётся предмет из второй руки, а иначе возвращается предмет и основной руки.",
  "figura.docs.living_entity.get_health": "Возвращает здоровье сущности.",
  "figura.docs.living_entity.get_max_health": "Возвращает максимальное значение здоровья, которое сущность может иметь.",
  "figura.docs.living_entity.get_armor": "Возвращает количество очков брони сущности.",
  "figura.docs.living_entity.get_death_time": "Возвращает, сколько тиков сущность считается мёртвой.",
  "figura.docs.living_entity.get_status_effects": "Возвращает таблицу с эффектами сущности. Таблица включает в себя подтаблицы, в которых указан ID эффекта, его сила, длительность, и видны ли частицы этого эффекта.",
  "figura.docs.living_entity.get_arrow_count": "Возвращает количество стрел в этой сущности.",
  "figura.docs.living_entity.get_stinger_count": "Возвращает количество пчелиных шал, которые торчат в этой сущности.",
  "figura.docs.living_entity.is_left_handed": "Возвращает \"true\" если левая рука является основной рукой сущности.",
  "figura.docs.living_entity.is_using_item": "Возвращает, использует ли сущность предмет в данный момент.",
  "figura.docs.living_entity.get_active_hand": "Вовзвращает \"OFF_HAND\" или \"MAIN_HAND\", учитывая то, какой рукой эта сущность использует предмет.",
  "figura.docs.living_entity.get_active_item": "Возвращает предмет, который сейчас используется. Если сущность не использует никакой предмет, возвращает \"nil\".",
  "figura.docs.living_entity.is_climbing": "Возвращает, использует ли сейчас сущность блок, на который можно взобраться. Например: лестница или лиана.",

  "figura.docs.player": "Acts as a proxy for a player entity in the Minecraft world. A global instance exists for the avatar's user, under the name \"player\".",
  "figura.docs.player.get_food": "Gets the current food level of the player, from 0 to 20.",
  "figura.docs.player.get_saturation": "Gets the current saturation level of the player.",
  "figura.docs.player.get_experience_progress": "Gets the progress of the way towards the player's next level, as a value from 0 to 1.",
  "figura.docs.player.get_experience_level": "Gets the player's current level.",
  "figura.docs.player.get_model_type": "Returns \"SLIM\" or \"DEFAULT\", depending on the player's model type.",
  "figura.docs.player.get_gamemode": "Returns \"SURVIVAL\", \"CREATIVE\", \"ADVENTURE\", or \"SPECTATOR\" depending on the player's gamemode. If the gamemode is unknown, returns nil.",
  "figura.docs.player.is_flying": "Returns whether the player is currently flying.",

  "figura.docs.events": "Глобальное API, которое включает в себя все события в Figura. Доступ осуществляется с помощью переменной \"events\".",
  "figura.docs.events.run_once": "Ожидает того момента, когда функция проверки вернёт \"true\", затем вызывает функцию, которая была передана в \"toRun\". ",

  "figura.docs.events.tick": "Событие \"TICK\" вызывается каждый внутриигровой тик если сущность аватара существует.",
  "figura.docs.events.world_tick": "Событие \"WORLD_TICK\" вызывается каждый внутриигровой тик.",
  "figura.docs.events.render": "Событие \"RENDER\" вызывается каждый кадр, перед отрисовкой аватара. Принимает параметр \"delta\", который является числом от 0 до 1, который определяет на сколько игра продвинулась в тиках.",
  "figura.docs.events.post_render": "Событие \"POST_RENDER\" вызывается каждый кадр, после отрисовки аватара. Принимает параметр \"delta\", который является числом от 0 до 1, который определяет на сколько игра продвинулась в тиках.",
  "figura.docs.events.world_render": "Событие \"WORLD_RENDER\" вызывается каждый кадр перед отрисовкой мира. Всегда запускается когда мир виден, даже если аватар нет, так что вызывается и при виде от первого лица. Принимает параметр \"delta\", который является числом от 0 до 1, который определяет на сколько игра продвинулась в тиках.",
  "figura.docs.events.post_world_render": "Событие \"POST_WORLD_RENDER\" вызывается каждый кадр после отрисовки мира. Всегда запускается когда мир виден, даже если аватар нет, так что вызывается и при виде от первого лица. Принимает параметр \"delta\", который является числом от 0 до 1, который определяет на сколько игра продвинулась в тиках.",
  "figura.docs.events.chat_send_message": "Событие \"CHAT_SEND_MESSAGE\" вызывается каждый раз когда вы пишите сообщение в чат. Переданная строка содержит отправленное вами сообщение.",
  "figura.docs.events.chat_receive_message": "Событие \"CHAT_RECEIVE_MESSAGE\" вызывается каждый раз когда вы получаете сообщение. Переданная строка содержит полученное вами сообщение.",

  "figura.docs.event": "Экземпляр события в майнкрафте. Вы можете зарегистрировать функции для этого события, и эти функции будут вызываться когда это событие происходит.",
  "figura.docs.event.register": "Регистрирует функцию для этого события. Когда это событие происходит, функция запускается. Функции запускаются в том-же порядке, в каком они были зарегистрированы. Дополнительный парамет \"name\" может быть использован, если вы захотите позже удалить эту функцию.",
  "figura.docs.event.clear": "Очищает события от всех зарегистрированных функций.",
  "figura.docs.event.remove": "Удаляет функцию зарегистрированную для этого события. Стандартный индекс - 1, что указывает на первую зарегистрированную функцию, после чего удаляет его. Если передать в аргументы число, функция с этим индексом будет удалена. При передачи имени в аргументы, все функции под этим именем будут удалены. Возвращает \"true\" если функция была удалена, и \"false\" если нет.",
  "figura.docs.event.get_count": "Возвращает количество функций зарегистрированных для этого события.",

  "figura.docs.client": "Глобальное API для взаимодействия с текущим клиентом Minecraft. Большинство функций этого API возвращает вещи, которые вы можете найти в F3.",
  "figura.docs.client.get_fps": "Получает FPS клиента. Возвращает 0 если счётчик FPS ещё не готов (или ваш пк просто на столько плох).",
  "figura.docs.client.get_fps_string": "Возвращает \"FPS\" строку клиента, которая отображается в F3. Включает в себя информацию о FPS, лимите FPS, вертикальной синхронизации, типе облаков, и радиусе сглаживания биомов.",
  "figura.docs.client.is_paused": "Возвращает \"true\" если клиент на паузе.",
  "figura.docs.client.get_version": "Возвращает \"версию\" вашего клиента. В тестирование, это возвращало \"Fabric\".",
  "figura.docs.client.get_version_type": "Возвращает \"тип версии\" вашего клиента. В тестирование, это возвращало \"Fabric\".",
  "figura.docs.client.get_server_brand": "Возращает тип сервера, на котором вы находитесь. Для одиночной игры это \"Integrated\".",
  "figura.docs.client.get_chunk_statistics": "Возвращает строку, содержащую информацию о чанках игрока. Строка появляется в меню F3.",
  "figura.docs.client.get_entity_statistics": "Возвращает строку, содержащую информацию о загруженных сущностях на клиенте игрока. Строка появляется в меню F3.",
  "figura.docs.client.get_sound_statistics": "Возвращает строку содержащую информацию о звуках которые проигрываются в данный момент. Строка появляется в меню F3.",
  "figura.docs.client.get_entity_count": "Возвращает количество загруженных сущностей.",
  "figura.docs.client.get_particle_count": "Возвращает количество загруженных частиц.",
  "figura.docs.client.get_current_effect": "Возвращает путь к шейдеру который в данный момент используется. Используется когда вы вселяетесь в сущность через режим наблюдателя, и сущность имеет другую видимость мира. Обычно возвращает \"nil\".",
  "figura.docs.client.get_java_version": "Возвращает вашу текущую версию Java, которая используется для запуска Minecraft.",
  "figura.docs.client.get_used_memory": "Возвращает количество байтов памяти, которое Minecraft использует в данный момент.",
  "figura.docs.client.get_max_memory": "Возвращает максимальное количество памяти, которое Minecraft будет пробовать использовать.",
  "figura.docs.client.get_allocated_memory": "Возвращает максимальное количество памяти, которое Minecraft может использовать.",
  "figura.docs.client.is_window_focused": "Возвращает \"true\", если окно Minecraft на данный момент в фокусе.",
  "figura.docs.client.is_hud_enabled": "Возвращает \"true\" если HUD включен (F1 отключает HUD).",
  "figura.docs.client.is_debug_overlay_enabled": "Возвращает \"true\" если меню F3 на данный момент открыто.",
  "figura.docs.client.get_window_size": "Возвращает размер окна Minecraft в пикселях, как {ширина, высота}.",
  "figura.docs.client.get_fov": "Возвращает текущий FOV на этом клиенте, не включая дополнительные эффекты по типу скорости или спринта.",
  "figura.docs.client.get_system_time": "Возвращает текущее системное время в миллисекундах.",
  "figura.docs.client.get_mouse_pos": "Возвращает позицию указателя мыши в пикселях, относительно левого верхнего угла.",
  "figura.docs.client.get_scaled_window_size": "Возвращает размер окна в единицах которые использует GUI.",
  "figura.docs.client.get_gui_scale": "Возвращает текущий модификатор размера GUI. Если вы используете auto, получает настоящий размер.",
  "figura.docs.client.get_camera_pos": "Возвращает позицию камеры.",
  "figura.docs.client.get_camera_rot": "Возвращает поворот камеры.",
  "figura.docs.client.get_screen": "Возвращает название экрана на котором сейчас окно расположено. Если окно на данный момент не на экране, возращает \"nil\".",
  "figura.docs.client.get_text_width": "Возвращает ширину текста в пикселях. В случае, если текст имеет несколько строк, возвращает самый большой размер среди всех строк.",
  "figura.docs.client.get_text_height": "Возвращает высоту текста в пикселях.",
  "figura.docs.client.get_active_lang": "Возвращает строку, в которой указан текущий язык игры.",

  "figura.docs.host": "Глобальное API специально для хоста аватара. Для остальных наблюдателей ничего не делает.",
  "figura.docs.host.unlock_cursor": "Установка значения \"true\" разблокирует ваш курсор, позволяя свободно им двигать по экрану, вместо поворота игрока.",
  "figura.docs.host.is_host": "Возвращает true, если скрипт запускается на хосте.",
  "figura.docs.host.get_targeted_entity": "Возвращает сущность на которую вы в данный момент смотрите. Эта сущность появляется в меню F3.",
  "figura.docs.host.set_title_times": "Устанавливает длительности текста на экране, включая длительность появления и угасания.",
  "figura.docs.host.clear_title": "Очищает текущий текст на экране.",
  "figura.docs.host.set_title": "Устанавливает текущил заголовок текста на экране. Текст принимается в виде JSON.",
  "figura.docs.host.set_subtitle": "станавливает текущил подзаголовок текста на экране. Текст принимается в виде JSON.",
  "figura.docs.host.set_actionbar": "Устанавливает текст над хотбаром. Булевой параметр по умолчанию является \"false\".",
  "figura.docs.host.send_chat_message": "Отправляет сообщение в чат.",
  "figura.docs.host.swing_arm": "Анимирует взмах рукой. Если булевое значение принимает \"true\", тогда анимация проиграется на вторичной руке.",
  "figura.docs.host.is_first_person": "Возвращает \"true\" если камера в режиме от первого лица.",
  "figura.docs.host.is_camera_backwards": "Возвращает \"true\" если камера смотрит назад.",
  "figura.docs.host.get_slot": "Получает предмет в определённом слоте. Использует тот-же синтаксис что и команда /item.",
  "figura.docs.host.set_chat_color": "Устанавливает цвет текста который в данный момент написан в чате.",
  "figura.docs.host.get_chat_text": "Получает цвет текста который в данный момент написан в чате.",
  "figura.docs.host.set_chat_text": "Текст который в данный момент написан в чате.",

  "figura.docs.meta": "Глобальное API содержащее функции для взаимодействия с метаданными вашего аватара, а так-же информацией о текущем запущенном скрипте.",
  "figura.docs.meta.store": "Сохраняет переменную в метаданных вашего аватара. Другие могут получить значение этой переменной с помощью функции \"getVariable()\" у экземпляра игрока. Ключ должен быть строкой.",
  "figura.docs.meta.get_color": "Получает текущую строку цвета вашего аватара, которая используется как тема вашего аватара.",
  "figura.docs.meta.set_color": "Устанавливает текущую строку цвета вашего аватара, которая используется как тема вашего аватара.",
  "figura.docs.meta.get_version": "Получает строку версии вашего аватара.",
  "figura.docs.meta.get_authors": "Получает строку авторов этого аватара.",
  "figura.docs.meta.get_name": "Получает имя вашего аватара.",
  "figura.docs.meta.get_size": "Получает размер файла аватара в байтах.",
  "figura.docs.meta.has_script_error": "Получает, остановлен ли этот скрипт в данный момент из-за ошибки (бесполезно лол).",
  "figura.docs.meta.has_texture": "Есть ли у этого аватара текстура.",
  "figura.docs.meta.get_init_count": "Получает количество инструкций инициализации для этого автара.",
  "figura.docs.meta.get_max_init_count": "Получает макимальное количемство инструкций во время инициализации, которое указано в параметрах доверия пользователя.",
  "figura.docs.meta.get_tick_count": "Получает количество инструкций для \"Events.TICK\" для этого аватара, которое было зафиксировано в последнем тике.",
  "figura.docs.meta.get_max_tick_count": "Получает максимальное количество инструкций в \"Event.TICK\", которое указано в параметрах доверия пользователя.",
  "figura.docs.meta.get_render_count": "Получает количество иструкций для событий \"Events.RENDER\" и \"Events.POST_RENDER\" для этого аватара, которое было зафиксировано в последнем кадре.",
  "figura.docs.meta.get_max_render_count": "Получает максимальное количество иструкций для событий \"Events.RENDER\" и \"Events.POST_RENDER\", которое указано в параметрах доверия пользователя.",
  "figura.docs.meta.get_world_tick_count": "Получает количество инструкций для \"Events.WORLD_TICK\" для этого аватара, которое было зафиксировано в последнем тике.",
  "figura.docs.meta.get_max_world_tick_count": "Получает максимальное количество инструкций в \"Event.WORLD_TICK\", которое указано в параметрах доверия пользователя.",
  "figura.docs.meta.get_world_render_count": "Получает количество иструкций для событий \"Events.WORLD_RENDER\" и \"Events.POST_WORLD_RENDER\" для этого аватара, которое было зафиксировано в последнем кадре.",
  "figura.docs.meta.get_max_world_render_count": "Получает максимальное количество иструкций для событий \"Events.WORLD_RENDER\" и \"Events.POST_WORLD_RENDER\", которое указано в параметрах доверия пользователя.",
  "figura.docs.meta.get_script_memory": "Получает количетсво байтов памяти, которое использует этот аватар.",
  "figura.docs.meta.get_max_script_memory": "Получает максимально возможное количество байтов памяти, которое может быть использовано этим аватаром. Это значение задаётся пользователем в настройках доверия.",
  "figura.docs.meta.get_complexity": "Получает текущую комплексность этого аватара..",
  "figura.docs.meta.get_max_complexity": "Получает максимальное количество комплексности (количества полигонов), которое указано пользователем в настройках доверия.",
  "figura.docs.meta.get_remaining_particles": "Получает оставшееся количество частиц, которое этот аватар может призвать.",
  "figura.docs.meta.get_max_particles": "Получает максимальное количество частиц, которое указано пользователем в настройках доверия.",
  "figura.docs.meta.get_remaining_sounds": "Получает оставшееся количество звуков, которое аватар может проиграть.",
  "figura.docs.meta.get_max_sounds": "Получает максимальное количество звуков, установленное пользователем в настройках доверия.",
  "figura.docs.meta.get_animation_complexity": "Получает текущую комплексность анимаций для этого аватара.",
  "figura.docs.meta.get_max_animation_complexity": "Получает максимальную комплексность анимаций (количество каналов анимаций), которое указано пользователем в настройках доверия.",
  "figura.docs.meta.can_edit_vanilla_model": "Получает, разрешает ли пользователь редактировать ванильную модель вашего автара.",
  "figura.docs.meta.can_edit_nameplate": "Получает, разрешает ли пользователь редактирование вашего никнейма.",
  "figura.docs.meta.can_render_offscreen": "Получает, разрешает ли пользователь отрисовывать ваш аватар вне экрана.",
  "figura.docs.meta.can_use_custom_sounds": "Получает, разрешает ли пользователь проигрывать пользовательские звуки вашего аватара.",

  "figura.docs.keybind_api": "Глобальное API, содержащее в себе функции для работы с горячими клавишами.",
  "figura.docs.keybind_api.create": "Создаёт и возвращает новую горячую клавишу. Имя используется в меню горячих клавиш. Параметр \"key\" это идентификатор клавиши, по типу \"key.keyboard.r\". Аргумент \"gui\" определяет, может ли клавиша работа всегда, или тольк тогда когда у вас не открыт какой либо экран.",
  "figura.docs.keybind_api.get_vanilla_key": "Возвращает ID клавиши, которое привязано к ванильной горячей клавише. Проверьте докумендацию списков \"list\" для получения всех возможных ванильных действий.",

  "figura.docs.keybind": "Горячая клавиша вашего скрипта. Экземпляры этого типа могут быть получены в помощью функции \"create()\" в KeybindAPI.",
  "figura.docs.keybind.set_key": "Устанавливает клавишу для этого хоткея.",
  "figura.docs.keybind.is_default": "Проверяет, находится ли горячая клавиша сейчас в другом состоянии (не была изменена с помощью меню горячих клавиш).",
  "figura.docs.keybind.get_key": "Получает клавишу этого хоткея.",
  "figura.docs.keybind.get_key_name": "Получает имя клавиши для этого хоткея.",
  "figura.docs.keybind.get_name": "Получает имя горячей клавиши, которое вы установили когда создавали её.",
  "figura.docs.keybind.is_pressed": "Получает, нажата ли эта клавиша в данный момент.",
  "figura.docs.keybind.on_press": "Функция, которая запускается когда пользователь нажимает на клавишу.",
  "figura.docs.keybind.on_release": "Функция, которая запускается когда пользователь перестаёт нажимать на клавишу.",
  "figura.docs.keybind.enabled": "Должна ли эта горячая клавишу обрабатываться или нет.",
  "figura.docs.keybind.gui": "Может ли эта клавиша срабатывать при открытом экране.",
  "figura.docs.keybind.override": "Должна ли эта горячая клавиша перезаписывать ванильную и срабатывать вместо неё.",

  "figura.docs.renderer": "Глобальное API предоставляющее доступ к функциям которые изменяют, как Minecraft отрисовывает вашего игрока.",
  "figura.docs.renderer.render_fire": "Должны ли вы визуально иметь эффект огня. По умолчанию включено.",
  "figura.docs.renderer.render_vehicle": "Должен ли отрисовываться транспорт на котором вы сидите. По умолчанию включено.",
  "figura.docs.renderer.set_shadow_radius": "Устанавливает радиус вашей тени. Стандартное значение - \"nil\", что означает что используется стандартное для игроков значение - \"0.5\". Максимальное значение - 12.",
  "figura.docs.renderer.get_shadow_radius": "Получает радиус вашей тени. Стандартное значение - \"nil\", что означает что используется стандартное для игроков значение - \"0.5\".",
  "figura.docs.renderer.is_first_person": "Проверяет, находится ли ваша камера в режиме от первого лица.",
  "figura.docs.renderer.is_camera_backwards": "Проверяет, находится ли ваша камера сзади вас в режиме от третьего лица.",
  "figura.docs.renderer.set_camera_rot": "Устанавливает абсолютное значение поворота камеры. Значения \"nil\" расцениваются как 0. Для относительного поворота, рекомендуется проверить \"offset\" функцию поворота.",
  "figura.docs.renderer.offset_camera_rot": "Устанавливает дополнительный поворот для камеры. Значения \"nil\" расцениваются как 0. Углы нужно указывать в градусах. Для абсолютного поворота, используйте не \"offset\" функцию поворота.",
  "figura.docs.renderer.set_post_effect": "Устанавливает текущий эффект отрисовки. Делает тоже самое, что и Super Secret Settings в старых версиях.",

  "figura.docs.vectors": "Глобальное API которое предоставляет доступ к функциям для созданий и манипулирования векторами. Доступ осуществляется с помощью переменной \"vectors\".",
  "figura.docs.vectors.vec": "Создаёт и возвращает вектор, размер которого равен количеству переданных аргументов. Для примера, при вызове \"vec(3, 4, 0, 2)\", функция вернёт Vector4 который хранит эти значения. Существует глобальное дополнительное имя \"vec\" для этой функции, что означает, что вам не обязательно обращаться к переменной \"vectors\" для доступа к этой функции.",
  "figura.docs.vectors.vec2": "Создаёт и возвращает Vector2 с переданными значение. Значения \"nil\" преобразовываются в \"0\".",
  "figura.docs.vectors.vec3": "Создаёт и возвращает Vector3 с переданными значение. Значения \"nil\" преобразовываются в \"0\".",
  "figura.docs.vectors.vec4": "Создаёт и возвращает Vector4 с переданными значение. Значения \"nil\" преобразовываются в \"0\".",
  "figura.docs.vectors.vec5": "Создаёт и возвращает Vector5 с переданными значение. Значения \"nil\" преобразовываются в \"0\".",
  "figura.docs.vectors.vec6": "Создаёт и возвращает Vector6 с переданными значение. Значения \"nil\" преобразовываются в \"0\".",
  "figura.docs.vectors.rgb_to_int": "Конвертирует переданный цвет в формате RGB в целое число.",
  "figura.docs.vectors.int_to_rgb": "Конвертирует переданное число в RGB вектор.",
  "figura.docs.vectors.hex_to_rgb": "Переводит строку цвета в HEX формате в RGB вектор. Символ \"#\" в начале строки не обязателен, и длинна строки может быть любой, однако переведены в RGB будут только первые 6 HEX чисел. Короткий HEX (длинной в 3 числа) так-же поддерживается. Например, \"#42\" это тоже самое что и \"420000\", и \"F0B\" это тоже самое что и \"FF00BB\".",
  "figura.docs.vectors.hsv_to_rgb": "Конвертирует переданный цвет в HSV формате в RGB формат.",
  "figura.docs.vectors.rgb_to_hsv": "Конвертирует переданный цвет в RGB формате в HSV формат.",
  "figura.docs.vectors.rainbow": "Получает RGB вектор со смещением HUE основанное на выданной скорости и том сколько времени игра уже открыта.",
  "figura.docs.vectors.rotate_around_axis": "Поворачивает вектор относительно вектора поворота.",
  "figura.docs.vectors.to_camera_space": "Конвертирует позицию в мире в позицию относительно камеры пользователя.",
  "figura.docs.vectors.world_to_screen_space": "Конвертирует позицию в мире в позицию относительно экрана пользователя.",

  "figura.docs.vector2": "Вектор который содержит 2 числа. Может быть создан с помощью функций в \"vectors\" API.",
  "figura.docs.vector3": "Вектор который содержит 3 числа. Может быть создан с помощью функций в \"vectors\" API.",
  "figura.docs.vector4": "Вектор который содержит 4 числа. Может быть создан с помощью функций в \"vectors\" API.",
  "figura.docs.vector5": "Вектор который содержит 5 числа. Может быть создан с помощью функций в \"vectors\" API.",
  "figura.docs.vector6": "Вектор который содержит 6 числа. Может быть создан с помощью функций в \"vectors\" API.",

  "figura.docs.vector_n.x": "Первая координата этого вектора. Может быть так же получена с помощью индекса [\"r\"] или [1].",
  "figura.docs.vector_n.y": "Вторая координата этого вектора. Может быть так же получена с помощью индекса [\"g\"] или [2].",
  "figura.docs.vector_n.z": "Третья координата этого вектора. Может быть так же получена с помощью индекса [\"b\"] или [3].",
  "figura.docs.vector_n.w": "Четвёртая координата этого вектора. Может быть так же получена с помощью индекса [\"a\"] или [4].",
  "figura.docs.vector_n.t": "Пятая координата этого вектора. Может быть так же получена с помощью индекса [5].",
  "figura.docs.vector_n.h": "Шестая координата этого вектора. Может быть так же получена с помощью индекса [6].",
  "figura.docs.vector_n.reset": "Сбрасывает этот вектор обратно к нулевым значениям.",
  "figura.docs.vector_n.set": "Устанавливает этому вектору новый значения. Значения \"nil\" расцениваются как 0.",
  "figura.docs.vector_n.copy": "Создаёт и возвращает копию этого вектора.",
  "figura.docs.vector_n.normalize": "Нормализует этот вектор, если его длинна не равна нулю.",
  "figura.docs.vector_n.normalized": "Возвращает нормализованную копию этого вектора, если его длинна не равна нулю.",
  "figura.docs.vector_n.clamp_length": "Модифицирует этот вектор так, что бы его длинна не могла выйти за рамки \"minLength\" и \"maxLength\". Если длинна вектора - 0, он не модифицируется.",
  "figura.docs.vector_n.clamped": "Возвращает копию вектора с ограниченной длинной.",
  "figura.docs.vector_n.length": "Возвращает длинну этого вектора.",
  "figura.docs.vector_n.length_squared": "Возвращает \"квадратную\" длинну этого вектора. Обычно используется только если вам нужны относительные длинны, поэтому эта функция не использует квадратный корень.",
  "figura.docs.vector_n.dot": "Возвращает скалярное произведение первого и второго векторов.",
  "figura.docs.vector_n.to_rad": "Возвращает копию этого вектора в радианах.",
  "figura.docs.vector_n.to_deg": "Возвращает копию этого вектора в градусах.",

  "figura.docs.vector3.cross": "Возвращает векторное произведение первого и второго векторов.",
  "figura.docs.vector3.augmented": "Возвращает аугментированную форму этого вектора. Аугментированная форма вектора, это Vector4 с единицей в четвёртой (W) координате.",

  "figura.docs.matrices": "Глобальное API которое содержит функции направленные на создание и модифицирование матриц. Доступ осуществляется с помощью переменной \"matrices\".",
  "figura.docs.matrices.mat2": "Создаёт Matrix2 с заданными значениями колонок. Если вы вызовите функцию без аргументов, вернётся стандартная матрица 2x2.",
  "figura.docs.matrices.mat3": "Создаёт Matrix3 с заданными значениями колонок. Если вы вызовите функцию без аргументов, вернётся стандартная матрица 3x3.",
  "figura.docs.matrices.mat4": "Создаёт Matrix4 с заданными значениями колонок. Если вы вызовите функцию без аргументов, вернётся стандартная матрица 4x4.",
  "figura.docs.matrices.rotation2": "Создаёт новую матрицу 2 на 2 которая поворачивает на определённый угол. Угол представлен в градусах.",
  "figura.docs.matrices.rotation3": "Создаёт новую матрицу 2 на 2 которая поворачивает на определённый угол. Угол представлен в градусах, и порядок поворота - ZYX.",
  "figura.docs.matrices.x_rotation3": "Создаёт новую матрицу 3 на 3 которая поворачивает на определённый угол вокруг оси X. Угол представлен в градусах.",
  "figura.docs.matrices.y_rotation3": "Создаёт новую матрицу 3 на 3 которая поворачивает на определённый угол вокруг оси Y. Угол представлен в градусах.",
  "figura.docs.matrices.z_rotation3": "Создаёт новую матрицу 3 на 3 которая поворачивает на определённый угол вокруг оси Z. Угол представлен в градусах.",
  "figura.docs.matrices.rotation4": "Создаёт новую матрицу 4 на 4 которая поворачивает на определённые углы. Углы представлены в градусах, и порядок вращения: ZYX.",
  "figura.docs.matrices.x_rotation4": "Создаёт новую матрицу 4 на 4 которая поворачивает на определённый угол вокруг оси X. Угол представлен в градусах.",
  "figura.docs.matrices.y_rotation4": "Создаёт новую матрицу 4 на 4 которая поворачивает на определённый угол вокруг оси Y. Угол представлен в градусах.",
  "figura.docs.matrices.z_rotation4": "Создаёт новую матрицу 4 на 4 которая поворачивает на определённый угол вокруг оси Z. Угол представлен в градусах.",
  "figura.docs.matrices.scale2": "Создаёт новую матрицу 2 на 2 которая меняет размер.",
  "figura.docs.matrices.scale3": "Создаёт новую матрицу 3 на 3 которая меняет размер.",
  "figura.docs.matrices.scale4": "Создаёт новую матрицу 4 на 4 которая меняет размер.",
  "figura.docs.matrices.translate4": "Создаёт матрицу 3 на 3 которая перемещает по заданному смещению.",
  "figura.docs.matrices.translate3": "Создаёт матрицу 4 на 4 которая перемещает по заданному смещению.",

  "figura.docs.matrix2": "Матрица с 2 строками и 2 колонками.",
  "figura.docs.matrix3": "Матрица с 3 строками и 3 колонками.",
  "figura.docs.matrix4": "Матрица с 4 строками и 4 колонками.",

  "figura.docs.matrix_n.vrc": "Для каждого элемента в матрице есть определённое значение. Вы можете получиь эти значения с помощью v{строка}{колонка}, например \"mat.v12\" вернёт значение которое хранится в первой строке второй колонки.",
  "figura.docs.matrix_n.reset": "Сбрасывает матрицу обратно с стандратным значениям.",
  "figura.docs.matrix_n.det": "Просчитывает и возвращает определитель этой матрицы.",
  "figura.docs.matrix_n.invert": "Инвертирует эту матрицу, изменяя значения внутри.",
  "figura.docs.matrix_n.get_inverse": "Просчитывает и возвращает инвертированную копию этой матрицы.",
  "figura.docs.matrix_n.transpose": "Транспонирует матрицу, меняя значения внутри.",
  "figura.docs.matrix_n.get_transpose": "Просчитывает и возвращает транспонированную копию этой матрицы.",
  "figura.docs.matrix_n.scale": "Меняет размер этой матрицы на определённое число, изменяя значения внутри.",

  "figura.docs.matrix2.rotate": "Поворачивает эту матрицу на определённый угол, меняя значения внутри. Угол в формате градусов.",
  "figura.docs.matrix2.get_column": "Получает Vector2 в котором хранятся значения колонки в матрице. Вызов \"mat:getColumn(1)\" вернёт первую колонку в матрице.",
  "figura.docs.matrix2.get_row": "Получает Vector2 в котором хранятся значения строки в матрице. Вызов \"mat:getRow(1)\" вернёт первую строку в матрице.",

  "figura.docs.matrix3.translate": "Перемещает эту матрицу, изменяя значения внутри.",
  "figura.docs.matrix3.rotate": "Поворачивает эту матрицу на определённый угол, меняя значения внутри. Угол в формате градусов, и порядок вращения: ZYX.",
  "figura.docs.matrix3.get_column": "Получает Vector3 в котором хранятся значения колонки в матрице. Вызов \"mat:getColumn(1)\" вернёт первую колонку в матрице.",
  "figura.docs.matrix3.get_row": "Получает Vector3 в котором хранятся значения строки в матрице. Вызов \"mat:getRow(1)\" вернёт первую строку в матрице.",

  "figura.docs.matrix4.translate": "Перемещает эту матрицу, изменяя значения внутри.",
  "figura.docs.matrix4.rotate": "Поворачивает эту матрицу на определённый угол, меняя значения внутри. Угол в формате градусов, и порядок вращения: ZYX.",
  "figura.docs.matrix4.get_column": "Получает Vector4 в котором хранятся значения колонки в матрице. Вызов \"mat:getColumn(1)\" вернёт первую колонку в матрице.",
  "figura.docs.matrix4.get_row": "Получает Vector4 в котором хранятся значения строки в матрице. Вызов \"mat:getRow(1)\" вернёт первую строку в матрице."
}
